def env = project.hasProperty('env') ? project.getProperty('env') : 'test'
logger.quiet "Loading configuration for environment '$env'."

def configFile = file("$rootDir/gradle/config/buildConfig.groovy")
def parsedConfig = new ConfigSlurper(env).parse(configFile.toURL())

def sonarUrl = project.hasProperty('sonar_url') ? project.getProperty('sonar_url') : 'localhost:9000'
def sonarMysqlUrl = project.hasProperty('sonar_mysql_url') ? project.getProperty('sonar_mysql_url') : 'localhost:3306'
logger.quiet "Sonar url: '$sonarUrl'."
logger.quiet "Sonar mysql url: '$sonarMysqlUrl'."

allprojects {
    apply plugin: 'maven-publish'
    apply from: "$rootDir/gradle/versioning.gradle"
    ext.config = parsedConfig
    ext.fullRepoUrl = "$config.binaryRepository.url/$config.binaryRepository.name"

    group = 'io.mercer.handbags'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'sonar-runner'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    repositories {
        jcenter()
        mavenLocal()
        maven { url "http://nexus.broadleafcommerce.org/nexus/content/repositories/snapshots/" }
    }

    sonarRunner {
        toolVersion = '2.4'
        sonarProperties {
            property "sonar.host.url", "http://$sonarUrl/"
            property "sonar.jdbc.url", "jdbc:mysql://$sonarMysqlUrl/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
            property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
            property "sonar.jdbc.username", "sonar"
            property "sonar.jdbc.password", "123qwe"
            property "sonar.sourceEncoding", "UTF-8"
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        publications


        repositories {
            maven {
                url fullRepoUrl

                credentials {
                    username = config.binaryRepository.username
                    password = config.binaryRepository.password
                }
            }
        }
    }
}

